{"version":3,"sources":["data/MGMcGuire_Resume_0820.pdf","data/g.jpg","StyledComponents/NavStyle.js","StyledComponents/ContentDivs.js","StyledComponents/SidePanelStyle.js","Components/SidePanel.js","helpers.js/renderContact.js","Pages/Home.js","Components/Nav.js","Pages/About.js","StyledComponents/TileStyle.js","Components/Tile.js","Pages/Portfolio.js","StyledComponents/FormStyle.js","Components/Form.js","Pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavDiv","styled","div","Icons","a","HomeLink","Link","HomeNavDiv","TopNavLink","NavLinks","IconDiv","ContainerDiv","MainContentDiv","ContentDiv","AboutDiv","BioDiv","SideTitle","h1","SideDiv","MainSideDiv","SidePanel","props","name","renderContact","href","resume","target","rel","alt","className","contact","map","site","url","icon","Home","to","Nav","style","About","src","pic","TileContainer","TileDiv","Tile","item","image","github","process","undefined","renderGit","Portfolio","portfolio","key","FormDiv","StyledForm","form","Form","useState","email","message","inputs","setInputs","handleOnChange","event","persist","prev","id","value","submitting","status","serverState","setServerState","handleServerResponse","ok","msg","onSubmit","preventDefault","axios","method","data","then","r","catch","response","error","htmlFor","type","required","onChange","disabled","Contact","App","console","log","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c5c403f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MGMcGuire_Resume_0820.ddd701ca.pdf\";","module.exports = __webpack_public_path__ + \"static/media/g.89b23b72.jpg\";","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const NavDiv = styled.div`\n    text-align: right;\n    display: flex;\n    flex-flow: column wrap;\n    align-content: right;\n    justify-content: center;\n    margin-right: 3em;\n   \n    \n    h1 {\n        font-size: 2.7em;\n        margin-top: -.1em;\n        margin-bottom: .2em;\n    }\n\n`\n\nexport const Icons = styled.a`\n    /* width: 2em; */\n    margin: .3em;\n    color: black;\n    font-size: 2em;\n    height: 28px;\n    transition: 0.4s;\n\n    &:hover {\n        font-size: 2.1em;\n        opacity: 80%;\n    }\n`\n\nexport const HomeLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:visted {\n      text-decoration: none;\n      color: black;\n  }\n`\n\nexport const HomeNavDiv = styled.div`\n    margin: 2em -1.3em .5em 0em\n\n    @media (max-width: 500px) {\n        margin: auto;\n        /* width: 80vw; */\n      }\n`\n\nexport const TopNavLink = styled(Link)`\n  padding: 1em;\n  color: black;\n  text-decoration: none;\n  align-self: right;\n  font-family: 'Bebas Neue';\n  font-size: 1.5em;\n  transition: .5s;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 500px) {\n    font-size: 1.2em;\n  }\n`\n\nexport const NavLinks = styled(Link)`\n  padding: 1em .2em;\n  color: black;\n  text-decoration: none;\n  align-self: right;\n  font-family: 'Bebas Neue';\n  font-size: 1.8em;\n\n  &:hover {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 1.2em;\n  }\n\n`;\n\n\n\n\n\n","import styled from 'styled-components'\n\nexport const IconDiv = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-end;\n  margin-top: 1.5em;\n  height: 4em;\n`\nexport const ContainerDiv = styled.div`\n    display: grid;\n    grid-template-columns: 30% 70%;\n    height: 100vh;\n    /* overflow: auto; */\n\n    @media (max-width: 500px) {\n        display: flex;\n        flex-direction: column;\n        margin-top: 0;\n        height: auto;\n        width: auto;\n    }\n`\n\nexport const MainContentDiv = styled.div`\n    text-align: right;\n    display: flex;\n    flex-flow: column wrap;\n    align-content: right;\n    justify-content: center;\n    margin-top: -2em;\n    margin-right: 12em;\n        h1 {\n            font-size: 5em;\n            margin: 0em;\n        }\n\n      @media (max-width: 950px) {\n        margin-right: 2em;\n      }\n\n`\n\n\nexport const ContentDiv = styled.div`\n    overflow: auto;\n\n`\n\nexport const AboutDiv = styled.div`\n    margin-top: 5em;\n    display: flex;\n    justify-content: space-evenly;\n    flex-flow: row wrap;\n`\n\nexport const BioDiv = styled.div`\n    text-align: right;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.3em;\n    width: 20em;\n\n    @media (max-width: 500px) {\n        margin: 0em 1em;\n    }\n`\n","import styled from \"styled-components\"\n\nexport const SideTitle = styled.h1`\n    color: #fff;\n    font-size: 10em;\n    transform: rotate(-90deg);\n    white-space: nowrap;\n\n     @media (max-width: 500px) {\n        transform: none;\n        font-size: 2.5em;\n        margin: auto;\n        white-space: nowrap;\n        padding: 0em 1em;\n      }\n`;\n \nexport const SideDiv = styled.div`\n    flex-grow: 1;\n    background-color: #000;\n    height: 101vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    @media (max-width: 500px) {\n        flex-grow: none;\n        background-color: black;\n        margin: 25px 50px 75px 100px;\n        width: 60vw;\n        margin-top: 5em;\n        padding: 1em;\n        height: auto;\n    }\n    \n    @media (max-width: 400px) {\n        flex-grow: none;\n        background-color: black;\n        width: 60vw;\n        padding: 1em;\n        margin: 5em auto 0 auto;\n    }\n`\n    export const MainSideDiv = styled.div`\n        flex-grow: 1;\n        background-color: #000;\n        height: 101vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    \n      @media (max-width: 500px) {\n         flex-grow: none;\n         background-color: black;\n         margin: 25px 50px 75px 100px;\n         width: 60vw;\n         margin-top: 5em;\n         padding: 1em;\n         height: auto;\n        }\n    \n      @media (max-width: 400px) {\n        flex-grow: none;\n        background-color: black;\n        margin-left: 75px;\n        width: 60vw;\n        margin-top: 5em;\n        padding: 1em;\n      }\n`;","import React from 'react';\nimport { MainSideDiv, SideDiv, SideTitle } from '../StyledComponents/SidePanelStyle';\n\nconst SidePanel = (props) => {\n\n    const renderPanel = () => {\n        if (props.name === 'Hello!'){\n          return (  \n            <MainSideDiv>\n                <SideTitle>{ props.name }</SideTitle>\n            </MainSideDiv>)\n        } else {\n            return (\n             <SideDiv>\n                <SideTitle>{ props.name }</SideTitle>\n             </SideDiv>)\n        }\n    }\n\n\n    return ( \n        <>\n        { renderPanel() }\n        </>\n     );\n}\n \nexport default SidePanel;","import React from 'react';\nimport { IconDiv } from '../StyledComponents/ContentDivs'\nimport { Icons } from '../StyledComponents/NavStyle'\nimport contact from '../data/contact-db.json'\nimport resume from '../data/MGMcGuire_Resume_0820.pdf'\n\nconst mapContact = () => {\n  return contact.map(site => {\n    return (\n      <Icons href= { site.url } target=\"_blank\" rel=\"noopener noreferrer\">\n        <i alt={ site.name } className={ site.icon }/>\n      </Icons>\n    )\n  })\n}\n\nconst renderContact = () => {\n  return (\n    <IconDiv>\n      <Icons href= { resume } target=\"_blank\" rel=\"noopener noreferrer\">\n        <i alt='resume' className=\"fa fa-sticky-note\"/>\n      </Icons>\n       \n      { mapContact() }\n    </IconDiv>\n  )\n}\nexport default renderContact;\n\n","import React from 'react';\nimport { NavLinks } from '../StyledComponents/NavStyle'\nimport { ContainerDiv, MainContentDiv } from '../StyledComponents/ContentDivs'\nimport { HomeNavDiv } from '../StyledComponents/NavStyle.js'\nimport SidePanel from '../Components/SidePanel'\n\nimport renderContact from '../helpers.js/renderContact'\n\n\nconst Home = () => {\n    return ( \n        <ContainerDiv>\n        <SidePanel name='Hello!'/>\n        <MainContentDiv>\n            <h1>Gracie</h1>\n            <h1>McGuire</h1>\n            <HomeNavDiv>\n                <NavLinks to='/about'>  About </NavLinks>|\n                <NavLinks to='/portfolio'>  Portfolio </NavLinks>|\n                <NavLinks to='/contact'> Contact </NavLinks>\n            </HomeNavDiv>\n            { renderContact() }\n        </MainContentDiv>\n        </ContainerDiv>\n     );\n}\n \n\n\n\nexport default Home;","import React from 'react';\nimport { NavDiv, TopNavLink, HomeLink } from '../StyledComponents/NavStyle'\nimport renderContact from '../helpers.js/renderContact'\n\nconst Nav = () => {\n    return (\n    <NavDiv>\n        { renderContact() }\n        <HomeLink to='/'><h1>Gracie McGuire</h1></HomeLink>\n        <div style={{'margin-right': '-1.1em'}}>\n            <TopNavLink to='/about'>  About </TopNavLink>|\n            <TopNavLink to='/portfolio'>  Portfolio </TopNavLink>|\n            <TopNavLink to='/contact'> Contact </TopNavLink>\n        </div>\n        \n    </NavDiv>\n    )}\n\nexport default Nav;","import React from 'react';\nimport Nav from '../Components/Nav.js'\nimport { ContainerDiv, ContentDiv, AboutDiv, BioDiv } from '../StyledComponents/ContentDivs'\nimport SidePanel from '../Components/SidePanel'\nimport pic from '../data/g.jpg'\n\nconst About = () => {\n    return ( \n        <ContainerDiv>\n            <SidePanel name='About Me'/>\n            <ContentDiv>\n                <Nav/>\n                <AboutDiv>\n                    <img src={ pic } alt='gracie' style={{'width': '20em', 'align-self': 'center'}}/>\n                    <BioDiv>\n                        <h1>Hello!</h1>\n                        <p>\n                        I am an NYC based software engineer and designer hoping to combine my skills and experience with my passion for social justice and progressive politics. I am driven by the prospect of not only diversifying tech, but by using tech for the greater good. \n                        </p>\n                        <p>\n                        I am always looking for innovative and unique approaches to both technical and design problems, and have experience doing so with  Javascript, React, Redux, Node, Express, PostgreSQL, Ruby, Ruby on Rails, as well as Adobe Creative Suite. \n                       </p> \n                    <p>\n                        When not on my computer, I can be found skateboarding, reading, cooking, and missing the good ol' days when we could see live music. \n                    </p>\n                    </BioDiv>\n                </AboutDiv>\n            </ContentDiv>\n        </ContainerDiv>\n     );\n}\n \n\n\n\nexport default About;","import styled from \"styled-components\"\n\nexport const TileContainer = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n    margin-top:  2em;\n    align-items: center;\n    justify-content: center;\n`\n\n\nexport const TileDiv = styled.div`\n    width: 15em;\n    \n    background-color: black;\n    /* color: white; */\n    padding: 2em;\n    margin: 2em;\n    display: flex;\n    flex-flow: column wrap;\n    align-items: center;\n\n    img {\n        width: 15em;\n        padding-bottom: 2em;\n    }\n\n    a {\n        text-decoration: none;\n        color: white;\n        font-family: 'Roboto', sans-serif;\n        &:vistited {\n            text-decoration: none;\n        }\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`\n","import React from 'react';\nimport { TileDiv } from '../StyledComponents/TileStyle'\nimport { Icons } from '../StyledComponents/NavStyle'\n\nconst Tile = (props) => {\n    const { name, image, url, github } = props.item\n\n    const renderGit = () => {\n        if (github != undefined){ \n            return (\n                 <Icons href= { github } target=\"_blank\" rel=\"noopener noreferrer\">\n                    <i alt='github' className=\"fab fa-github\"/>\n                </Icons>\n            )\n        }\n    }\n\n    return (\n        <TileDiv>\n            <img alt={ name } src={ `${ process.env.PUBLIC_URL}${ image }` }/>\n            <a href= { url } target=\"_blank\" rel=\"noreferrer\">{ name }</a>\n           { renderGit() }\n        </TileDiv>\n    )\n}\n\nexport default Tile;","import React from 'react';\nimport Nav from '../Components/Nav.js'\nimport { ContainerDiv, ContentDiv } from '../StyledComponents/ContentDivs'\nimport { TileContainer } from '../StyledComponents/TileStyle'\nimport SidePanel from '../Components/SidePanel'\nimport Tile from '../Components/Tile'\nimport portfolio from '../data/portfolio-db.json'\n\nconst mapTiles = () => {\n    return portfolio.map(item => ( \n        <Tile item={ item } key={ item.name }/>\n    ))\n    \n}\n\nconst Portfolio = () => {\n    return ( \n        <ContainerDiv>\n            <SidePanel name={'Portfolio'}/>\n            <ContentDiv>\n                <Nav/>\n                <TileContainer>\n                    { mapTiles() }\n                </TileContainer>\n            </ContentDiv>\n        </ContainerDiv>\n     );\n}\n \n\n\n\nexport default Portfolio;","import styled from 'styled-components'\n\nexport const FormDiv = styled.div`\n    text-align: center;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.3em;\n    margin-top: 3em;\n    overflow: auto;\n    /* width: 20em; */\n\n    @media (max-width: 500px) {\n        margin-top: 1em;\n    }\n`\nexport const StyledForm = styled.form`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    input {\n        margin: 1em 2em;\n        width: 30vw;\n        height: 3vh;\n        padding: 1em;\n        font-family: 'Roboto', sans-serif;\n        font-size: 1em;\n    }\n    textarea {\n        padding: 1em 1em 4em;\n        margin: 1em 2em;\n        width: 30vw;\n        height: 3vh;\n        font-family: 'Roboto', sans-serif;\n        font-size: .8em;\n    }\n    label {\n        font-family: 'Bebas Neue';\n    }\n    button {\n        background-color: black;\n        color: white; \n        font-family: 'Bebas Neue';\n        font-size: 1em;\n        width: 15vw;\n        height: 2em;\n        margin-bottom: 3em;\n    }\n\n\n\n    @media (max-width: 500px) {\n        margin-top: 1em;\n\n        input {\n            width: auto;\n            height: 1em;\n        }\n\n        textarea {\n            width: auto;\n            height: auto;\n        }\n\n        button {\n            width: auto;\n        }\n    }\n`\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { StyledForm, FormDiv } from '../StyledComponents/FormStyle'\n\nfunction Form() {\n\n  //input state handling\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    message: \"\"\n  })\n\n  const handleOnChange = event => {\n    event.persist();\n    setInputs(prev => ({\n      ...prev,\n      [event.target.id]: event.target.value\n    }))\n  }\n\n\n  //server state handling \n\n  const [serverState, setServerState] = useState({\n    submitting: false,\n    status: null\n  });\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({\n      submitting: false,\n      status: { ok, msg }\n    });\n    if (ok) {\n      setInputs({\n        email: \"\",\n        message: \"\"\n      });\n    }\n  };\n\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setServerState({ submitting: true });\n    axios({\n      method: \"POST\",\n      url: \"https://formspree.io/f/xjvpevyj\",\n      data: inputs\n    })\n      .then(r => {\n        handleServerResponse(true, \"Thanks!\");\n      })\n      .catch(r => {\n        handleServerResponse(false, r.response.data.error);\n      });\n  };\n\n\n  return (\n    <FormDiv>\n        <StyledForm\n            onSubmit={ handleOnSubmit }>\n            <label htmlFor=\"email\"> Email:</label>\n            <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            onChange={ handleOnChange }\n            value={ inputs.email }\n            />\n            <label htmlFor=\"message\">Message:</label>\n            <textarea\n            id=\"message\"\n            name=\"message\"\n            onChange={ handleOnChange }\n            value={ inputs.message }\n            ></textarea>\n            <button type=\"submit\" disabled={ serverState.submitting }>\n            Submit\n            </button>\n            { serverState.status && (\n            <p className={ !serverState.status.ok ? \"errorMsg\" : \"\" }>\n                { serverState.status.msg }\n            </p>\n            ) }\n        \n        </StyledForm>\n    </FormDiv>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport Nav from '../Components/Nav.js'\nimport Form from '../Components/Form.js'\nimport { ContainerDiv, ContentDiv } from '../StyledComponents/ContentDivs'\nimport { FormDiv } from '../StyledComponents/FormStyle'\nimport SidePanel from '../Components/SidePanel'\n\nconst Contact = () => {\n    return ( \n        <ContainerDiv>\n            <SidePanel name='say hi!'/>\n            <ContentDiv>\n                <Nav/>\n                <FormDiv>\n                    <Form />\n                </FormDiv>\n            </ContentDiv>\n        </ContainerDiv>\n     );\n}\n \n\n\n\nexport default Contact;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Pages/Home'\nimport About from './Pages/About'\nimport Portfolio from './Pages/Portfolio'\nimport Contact from './Pages/Contact'\n\nconst App = () => {\n  console.log(\"Made with ❤️ by Gracie McGuire in 2020\");\n  console.log(\"github.com/graciemcguire 🏝\");\n return (\n      <Switch>\n        <Route \n          path='/about'\n          component={ About }\n        />\n        <Route \n          path='/portfolio'\n          component={ Portfolio }\n        />\n        <Route \n          path='/contact'\n          component={ Contact }\n        />\n        <Route \n          path='/*'\n          component={ Home }\n        />\n      </Switch>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}